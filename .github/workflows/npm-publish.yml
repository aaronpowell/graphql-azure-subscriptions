name: Publish a release

on:
  push:
    tags:
      - v* #version is cut

env:
  NODE_VERSION: 14

jobs:
  build_signalr:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/graphql-signalr-subscriptions
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: |
          npm ci
          npm run lint
          npm run build
          npm pack
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: package-signalr
          path: "packages/graphql-signalr-subscriptions/*.tgz"
  build_cosmos:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/graphql-cosmosdb-subscriptions
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: |
          npm ci
          npm run lint
          npm run build
          npm pack
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: package-cosmosdb
          path: "packages/graphql-cosmosdb-subscriptions/*.tgz"

  build:
    runs-on: ubuntu-latest
    needs: [build_cosmos, build_signalr]
    steps:
      - run: echo "tag=${GITHUB_REF##*/v}" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
          body: |
            Check the changelog: https://github.com/aaronpowell/packages/graphql-azure-subscriptions/blob/main/CHANGELOG.md

      - name: Download signalr package
        uses: actions/download-artifact@v2
        with:
          name: package-signalr

      - name: Upload package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: "aaronpowell-graphql-signalr-subscriptions-${{ env.tag }}.tgz"
          asset_name: "@aaronpowell/graphql-signalr-subscriptions-${{ env.tag }}.tgz"
          asset_content_type: application/zip

      - name: Download cosmosdb package
        uses: actions/download-artifact@v2
        with:
          name: package-cosmosdb

      - name: Upload package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: "aaronpowell-graphql-cosmosdb-subscriptions-${{ env.tag }}.tgz"
          asset_name: "@aaronpowell/graphql-cosmosdb-subscriptions-${{ env.tag }}.tgz"
          asset_content_type: application/zip

      - run: echo ${{ steps.create_release.outputs.id }} >> release.txt
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: release_id
          path: release.txt

  release:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: release
    steps:
      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: release_id
      - run: echo "release_id=$(cat release.txt)" >> $GITHUB_ENV
      - name: Publish release
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false
            })
  publish-npm:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Download package (SignalR)
        uses: actions/download-artifact@v2
        with:
          name: package-signalr
      - name: Download package (CosmosDB)
        uses: actions/download-artifact@v2
        with:
          name: package-cosmosdb
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org/
      - run: npm publish $(ls *cosmos*.tgz) --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - run: npm publish $(ls *signalr*.tgz) --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  publish-gpr:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Download package (SignalR)
        uses: actions/download-artifact@v2
        with:
          name: package-signalr
      - name: Download package (CosmosDB)
        uses: actions/download-artifact@v2
        with:
          name: package-cosmosdb
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://npm.pkg.github.com/
          scope: "@aaronpowell"
      - run: echo "registry=https://npm.pkg.github.com/@aaronpowell" >> .npmrc
      - run: npm publish $(ls *cosmos*.tgz) --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - run: npm publish $(ls *signalr*.tgz) --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
